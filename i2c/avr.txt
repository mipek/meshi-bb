The following options are target specific:
  -mcall-prologues            Use subroutines for function prologues and
                              epilogues
  -mint8                      Use an 8-bit 'int' type
  -mmcu=MCU                   Select the target MCU
  -mno-interrupts             Change the stack pointer without disabling
                              interrupts
  -mno-tablejump              Do not generate tablejump insns
  -mpmem-wrap-around          Make the linker relaxation machine assume that a
                              program counter wrap-around occures.
  -mrelax                     Relax branches
  -mshort-calls               Use rjmp/rcall (limited range) on >8K devices
  -msize                      Output instruction sizes to the asm file
  -mtiny-stack                Change only the low 8 bits of the stack pointer

AVR options:
  -mmcu=[avr-name] select microcontroller variant
                   [avr-name] can be:
                   avr1  - classic AVR core without data RAM
                   avr2  - classic AVR core with up to 8K program memory
                   avr25 - classic AVR core with up to 8K program memory
                           plus the MOVW instruction
                   avr3  - classic AVR core with up to 64K program memory
                   avr31 - classic AVR core with up to 128K program memory
                   avr35 - classic AVR core with up to 64K program memory
                           plus the MOVW instruction
                   avr4  - enhanced AVR core with up to 8K program memory
                   avr5  - enhanced AVR core with up to 64K program memory
                   avr51 - enhanced AVR core with up to 128K program memory
                   avr6  - enhanced AVR core with up to 256K program memory
                   avrxmega3 - XMEGA, > 8K, <= 64K FLASH, > 64K RAM
                   avrxmega4 - XMEGA, > 64K, <= 128K FLASH, <= 64K RAM
                   avrxmega5 - XMEGA, > 64K, <= 128K FLASH, > 64K RAM
                   avrxmega6 - XMEGA, > 128K, <= 256K FLASH, <= 64K RAM
                   avrxmega7 - XMEGA, > 128K, <= 256K FLASH, > 64K RAM
                   or immediate microcontroller name.
  -mall-opcodes    accept all AVR opcodes, even if not supported by MCU
  -mno-skip-bug    disable warnings for skipping two-word instructions
                   (default for avr4, avr5)
  -mno-wrap        reject rjmp/rcall instructions with 8K wrap-around
                   (default for avr3, avr5)
Known MCU names:
  avr1 avr2 avr25 avr3 avr31 avr35 avr4 avr5 avr51 avr6 avrxmega1
  avrxmega2 avrxmega3 avrxmega4 avrxmega5 avrxmega6 avrxmega7 at90s1200
  attiny11 attiny12 attiny15 attiny28 at90s2313 at90s2323 at90s2333
  at90s2343 attiny22 attiny26 at90s4414 at90s4433 at90s4434 at90s8515
  at90c8534 at90s8535 ata6289 attiny13 attiny13a attiny2313 attiny2313a
  attiny24 attiny24a attiny4313 attiny44 attiny44a attiny84 attiny25
  attiny45 attiny85 attiny261 attiny261a attiny461 attiny461a attiny861
  attiny861a attiny87 attiny43u attiny48 attiny88 at86rf401 at43usb355
  at76c711 atmega103 at43usb320 attiny167 at90usb82 at90usb162 atmega8u2
  atmega16u2 atmega32u2 atmega8 atmega48 atmega48a atmega48p atmega88
  atmega88a atmega88p atmega88pa atmega8515 atmega8535 atmega8hva
  atmega4hvd atmega8hvd at90pwm1 at90pwm2 at90pwm2b at90pwm3 at90pwm3b
  at90pwm81 atmega16 atmega16a atmega161 atmega162 atmega163 atmega164a
  atmega164p atmega165 atmega165a atmega165p atmega168 atmega168a
  atmega168p atmega169 atmega169a atmega169p atmega169pa atmega16hva
  atmega16hvb atmega32 atmega323 atmega324a atmega324p atmega324pa
  atmega325 atmega325p atmega3250 atmega3250p atmega328 atmega328p
  atmega329 atmega329p atmega329pa atmega3290 atmega3290p atmega32hvb
  atmega406 atmega64 atmega640 atmega644 atmega644a atmega644p atmega644pa
  atmega645 atmega645a atmega645p atmega649 atmega649a atmega649p
  atmega6450 atmega6450a atmega6450p atmega6490 atmega6490a atmega6490p
  atmega64hve atmega16hva atmega16hva2 at90can32 at90can64 at90pwm216
  at90pwm316 atmega16m1 atmega16u4 atmega32c1 atmega32m1 atmega32u4
  atmega32u6 atmega64c1 atmega64m1 at90usb646 at90usb647 at90scr100 at94k
  atmega128 atmega1280 atmega1281 atmega1284p atmega128rfa1 at90can128
  at90usb1286 at90usb1287 m3000f m3000s m3001b atmega2560 atmega2561
  atxmega16a4 atxmega16d4 atxmega32d4 atxmega32a4 atxmega64a3 atxmega64d3
  atxmega64a1 atxmega128a3 atxmega128d3 atxmega192a3 atxmega192d3
  atxmega256a3 atxmega256a3b atxmega256d3 atxmega128a1

Linker options
==============

Use "-Wl,OPTION" to pass "OPTION" to the linker.

avr2: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
avr1: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
avr25: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
avr3: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
avr31: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
avr35: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
avr4: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
avr5: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
avr51: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
avr6: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
avrxmega1: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
avrxmega2: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
avrxmega3: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
avrxmega4: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
avrxmega5: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
avrxmega6: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
avrxmega7: 
  --build-id[=STYLE]          Generate build ID note
  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that a
                                program counter wrap-around occures at address
                                <val>.  Supported values: 8k, 16k, 32k and 64k.
  --no-call-ret-replacement   The relaxation machine normally will
                                substitute two immediately following call/ret
                                instructions by a single jump instruction.
                                This option disables this optimization.
  --no-stubs                  If the linker detects to attempt to access
                                an instruction beyond 128k by a reloc that
                                is limited to 128k max, it inserts a jump
                                stub. You can de-active this with this switch.
  --debug-stubs               Used for debugging avr-ld.
  --debug-relax               Used for debugging avr-ld.
